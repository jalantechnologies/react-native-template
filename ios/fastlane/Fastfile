default_platform(:ios)

platform :ios do
  desc "Fetch certificates for CI"
  lane :ci_signing_setup do
    match(type: "appstore", readonly: true, keychain_name: "ci.keychain", keychain_password: ENV["KEYCHAIN_PASSWORD"])
    match(type: "development", readonly: true, keychain_name: "ci.keychain", keychain_password: ENV["KEYCHAIN_PASSWORD"])
  end

  desc "Build and upload to TestFlight"
  lane :pr_deploy do
    match(type: "appstore", readonly: true, verbose: true, keychain_name: "ci.keychain", keychain_password: ENV["KEYCHAIN_PASSWORD"])

    increment_build_number(
      xcodeproj: "Boilerplate.xcodeproj",
      build_number: Time.now.strftime("%Y%m%d%H%M")
    )

    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_B64'],
      is_key_content_base64: true,
    )
    ENV["ENVFILE"] = ".env.preview"
    ENV["NODE_ENV"] = "production"
    unless File.exist?("main.jsbundle")
     UI.user_error!("main.jsbundle not found. Make sure bundling step ran before Fastlane.")
    end
    build_app(
      clean: true,
      scheme: "Boilerplate",
      export_method: "app-store",
      export_options: {
        compileBitcode: false,
        signingStyle: "manual",
        provisioningProfiles: {
        "com.bettrsw.boilerplate" => "match AppStore com.bettrsw.boilerplate"
        }
      },
    )
    
    sh <<~BASH
      echo "🔍 Stripping bitcode from Hermes binary before uploading to TestFlight..."

      IPA_PATH=#{lane_context[:IPA_OUTPUT_PATH]}
      unzip -q "$IPA_PATH" -d temp_payload

      HERMES_BIN="temp_payload/Payload/Boilerplate.app/Frameworks/hermes.framework/hermes"
      APP_PATH="temp_payload/Payload/Boilerplate.app"

      if [ -f "$HERMES_BIN" ]; then
        echo "📦 Found Hermes binary. Stripping bitcode..."
        xcrun bitcode_strip -r "$HERMES_BIN" -o "$HERMES_BIN"

        echo "🔬 Verifying..."
        if otool -l "$HERMES_BIN" | grep -i bitcode; then
          echo "❌ Bitcode still present! Failing the build."
          exit 1
        else
          echo "✅ Bitcode successfully stripped."
        fi

        echo "🔐 Re-signing .app after modification..."
        CERT_ID=$(security find-identity -v -p codesigning | grep "Apple Distribution" | head -n1 | awk '{print $2}')

        for FRAMEWORK in "$APP_PATH/Frameworks/"*; do
          if [ -d "$FRAMEWORK" ]; then
            /usr/bin/codesign --force --sign "$CERT_ID" --timestamp=none "$FRAMEWORK"
          fi
        done

        /usr/bin/codesign --force --sign "$CERT_ID" \
          --timestamp=none \
          --preserve-metadata=entitlements \
          "$APP_PATH"

        echo "✅ Code signing complete."
      else
        echo "⚠️ Hermes binary not found at expected path: $HERMES_BIN"
        echo "Skipping bitcode stripping."
      fi

      echo "📦 Repacking IPA..."
      cd temp_payload && zip -r -y ../fixed.ipa * >/dev/null && cd ..
      mv fixed.ipa "$IPA_PATH"

      rm -rf temp_payload
    BASH


    upload_to_testflight(
      changelog: "PR ##{ENV['PR_NUMBER']} Build - automated upload",
      distribute_external: true,
      username: ENV["FASTLANE_USER"],
      apple_id: ENV["APPLE_ID"],
      app_identifier: "com.bettrsw.boilerplate"
    )
  end
end
