# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Fetches the latest version code from the Play Console and increments it by 1"
  lane :fetch_and_increment_build_number do
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

    version_codes = google_play_track_version_codes(
      package_name: app_identifier,
      track: "production",
      json_key: ENV["ANDROID_JSON_KEY_FILE"]
    )
    
    updated_version_code = version_codes[0] + 1
    
    increment_version_code(
      version_code: updated_version_code
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy_android_production do

    fetch_and_increment_build_number

    gradle(
      task: "bundle",
      build_type: "release",
      properties: {
        "android.injected.signing.store.file" => ENV["ANDROID_KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["ANDROID_KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASSWORD"],
      }
    )
    
    upload_to_play_store(
      track: "production",
      json_key: ENV["ANDROID_JSON_KEY_FILE"],
      skip_upload_apk: true,
    )
  end
  desc "Deploy APK to Google Play Internal Track App Distribution"
  lane :pr_deploy do |options|
    # Load the deploy script.
    load './scripts/gplay_pr_deploy.rb'
    gplay_pr_deploy(
      pr_number: options[:pr_number],
      json_key_file: options[:json_key_file],
      package_name: options[:package_name]
    )
  end

  desc "Clean up Google Play Internal Track App Distribution releases for closed PR"
  lane :pr_cleanup do |options|
    # Load the cleanup script
    load './scripts/gplay_pr_cleanup.rb'
    gplay_pr_cleanup(
      pr_number: options[:pr_number],
      json_key_file: options[:json_key_file],
      package_name: options[:package_name]    
    )
  end
end
