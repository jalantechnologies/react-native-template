require 'dotenv'
Dotenv.load("../../.env")  # Load .env file from the root directory

default_platform(:ios)

platform :ios do
  desc "Clean caches, inject .env, and build the app"
  lane :clean_build do
    # 1. Remove Xcode derived data
    # This step ensures that any old cache from previous builds is cleared
    sh "rm -rf ~/Library/Developer/Xcode/DerivedData"

    # 2. Clear Watchman (Metro) and Yarn caches
    # This will ensure any cached assets or dependencies are removed
    sh "watchman watch-del-all"
    sh "yarn cache clean"

    # 3. Navigate to the parent directory and find the .env file
    Dir.chdir("../") do
      # 1. Deintegrate and reinstall CocoaPods dependencies
      # This ensures that the project is in a clean state with updated pods
      sh "pod deintegrate"
      sh "pod install --repo-update"

      # 2. Build the project using xcodebuild
      # This will perform a clean build of the project, incorporating the latest .env variables
      ws  = Dir.glob("*.xcworkspace").first            # e.g. "MyApp.xcworkspace"
      app = File.basename(ws, ".xcworkspace")           # e.g. "MyApp"

      sh %(
        xcodebuild \
          -workspace #{ws} \
          -scheme #{app} \
          -configuration Release \
          -derivedDataPath build/DerivedData \
          -allowProvisioningUpdates \
          clean build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_STYLE=Manual
      )
    end
  end
end
