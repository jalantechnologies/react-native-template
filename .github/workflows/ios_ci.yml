name: iOS Clean-Build QA

on:
  push:
    branches:
      - shivam/bug/env-update-ios-build
    paths:
      - .env*

jobs:
  validate-clean-build:
    runs-on: macos-14
    env:
      NO_FLIPPER: 1
    steps:
      - uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
      
      - name: Install watchman
        run: brew install watchman

      - name: Select Xcode 16.0
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Install Bundler
        run: gem install bundler
      
      - name: Install Ruby dependencies
        working-directory: ios
        run: bundle install
      
      - name: Set Node Version
        uses: actions/setup-node@v4
        with:
          node-version: 22.13.1

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      # Patch Boost podspec to use a stable source and checksum to prevent flaky builds
      - name: Patch Boost Podspec with Custom Source
        working-directory: node_modules/react-native/third-party-podspecs
        run: |
          awk '
          /spec.source/ {
          print "  spec.source = { :http => '\''https://archives.boost.io/release/1.76.0/source/boost_1_76_0.tar.gz'\'', :sha256 => '\''7bd7ddceec1a1dfdcbdb3e609b60d01739c38390a5f956385a12f3122049f0ca'\'' }";
          skip=1; next
          }
          skip && /\}/ { skip=0; next }
          skip && /:sha256/ { next }
          { print }
          ' boost.podspec > boost.podspec.tmp && mv boost.podspec.tmp boost.podspec

      - name: Install CocoaPods dependencies
        working-directory: ios        
        run: |
          rm -f Podfile.lock
          bundle exec pod install --repo-update

      - name: Run fastlane clean_build
        working-directory: ios
        run: bundle exec fastlane ios clean_build

      - name: Check Info.plist for TEST_INJECTION
        run: |
          # The .app lives under ios/build/DerivedData/Build/Products/Release-iphoneos/
          APP_PATH="ios/build/DerivedData/Build/Products/Release-iphoneos/Boilerplate.app"
          PLIST="$APP_PATH/Info.plist"

          echo "üîç Looking for built .app at: $APP_PATH"
          if [ ! -d "$APP_PATH" ]; then
            echo "‚ùå Cannot find built .app bundle at $APP_PATH"
            exit 1
          fi

          echo "‚úÖ Found .app bundle."
          echo "üîç Checking Info.plist for TEST_INJECTION:"
          plutil -convert xml1 "$PLIST" -o - \
            | grep -A1 "TEST_INJECTION" \
            || (echo "‚ùå TEST_INJECTION not found in Info.plist" && exit 1)

          echo "‚úÖ TEST_INJECTION key is present!"

      - name: Upload logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-clean-build-logs
          path: build/
