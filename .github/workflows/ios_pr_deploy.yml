name: iOS PR Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: macos-14
    timeout-minutes: 30
    env:
      NO_FLIPPER: 1
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_B64: ${{ secrets.APP_STORE_CONNECT_API_KEY_B64 }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      - name: Select Xcode 16.0
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Install Bundler
        run: gem install bundler
      
      - name: Install Ruby dependencies
        working-directory: ios
        run: bundle install
      
      - name: Set Node Version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Remove Flipper dependencies (hard cleanup)
        run: |
          rm -rf node_modules/react-native-flipper ios/Pods/Flipper* || true
          yarn install --check-files || true

      - name: Patch Boost Podspec with Custom Source
        working-directory: node_modules/react-native/third-party-podspecs
        run: |
          awk '
          /spec.source/ {
          print "  spec.source = { :http => '\''https://archives.boost.io/release/1.76.0/source/boost_1_76_0.tar.gz'\'', :sha256 => '\''7bd7ddceec1a1dfdcbdb3e609b60d01739c38390a5f956385a12f3122049f0ca'\'' }";
          skip=1; next
          }
          skip && /\}/ { skip=0; next }
          skip && /:sha256/ { next }
          { print }
          ' boost.podspec > boost.podspec.tmp && mv boost.podspec.tmp boost.podspec

      - name: Install CocoaPods dependencies
        working-directory: ios
        run: |
          rm -f Podfile.lock
          bundle exec pod install --repo-update

      - name: Set up SSH for Match
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MATCH_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "GIT_SSH_COMMAND=ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" >> $GITHUB_ENV

      - name: Setup Keychain
        run: |
          security create-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }} ci.keychain
          security set-keychain-settings -lut 21600 ci.keychain
          security unlock-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }} ci.keychain
          security default-keychain -d user -s ci.keychain
      
      - name: Install code signing certificates via Match
        working-directory: ios
        run: |
          echo "üîê Installing certs..."
          bundle exec fastlane ci_signing_setup

      - name: Debug installed identities
        run: |
          echo "üïµÔ∏è Debugging code signing identities..."
          security find-identity -v -p codesigning
          security list-keychains

      - name: Clear Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Bundle React Native for iOS
        run: |
          echo "Working directory: $(pwd)"
          ls -la ..
          ENVFILE=.env.preview NODE_ENV=production npx react-native bundle \
            --entry-file index.js \
            --platform ios \
            --dev false \
            --bundle-output ios/main.jsbundle \
            --assets-dest . \

      - name: iOS PR Deploy to TestFlight
        working-directory: ios 
        run: |
          bundle exec fastlane ios pr_deploy

      - name: Post PR comment with TestFlight link
        if: ${{ github.event.pull_request }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          BUILD_HASH: ${{ github.sha }}
        run: |
          brew install gh # Only needed if gh CLI is not pre-installed
          gh auth setup-git
          TESTFLIGHT_LINK="https://appstoreconnect.apple.com/teams/$APP_STORE_CONNECT_API_KEY_ISSUER_ID/apps/$APPLE_ID/testflight/ios"
          gh pr comment "$PR_NUMBER" --body "‚úÖ TestFlight build uploaded for PR #$PR_NUMBER

          - üîó [View in App Store Connect]($TESTFLIGHT_LINK)
          - üÜî App ID: \`com.bettrsw.boilerplate\`
          - üß± Build Hash: \`$BUILD_HASH\`

          _This build was deployed by CI using Fastlane._"
