name: Deploy PR Build to Firebase

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  build-and-deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - name: Install Fastlane
        run: gem install fastlane

      - name: Set up environment
        run: |
          echo "FIREBASE_CLI_TOKEN=${{ secrets.FIREBASE_CLI_TOKEN }}" >> $GITHUB_ENV
          echo "FIREBASE_APP_ID=1:715635897715:android:0be885c6b27f7c99de0106" >> $GITHUB_ENV

      - name: Build & Deploy to Firebase App Distribution
        run: |
          cd android
          fastlane pr_deploy pr_number=${{ github.event.pull_request.number }} pr_title="${{ github.event.pull_request.title }}"

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const releaseUrl = "https://console.firebase.google.com/project/react-native-boilerplate-14974/appdistribution/app/1:715635897715:android:0be885c6b27f7c99de0106/releases";  // replace
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Deployed PR #${prNumber} to Firebase App Distribution.\n\nðŸ”— [View Releases](${releaseUrl})`
            })

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Firebase CLI and jq
        run: |
          npm install -g firebase-tools
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Cleanup Firebase App Distribution Releases
        env:
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
          FIREBASE_APP_ID: 1:715635897715:android:0be885c6b27f7c99de0106  # Your app ID
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "Fetching all releases for app $FIREBASE_APP_ID"
          releases_json=$(firebase appdistribution:releases:list --app "$FIREBASE_APP_ID" --json --token "$FIREBASE_CLI_TOKEN")

          echo "Searching for releases matching PR #$PR_NUMBER"
          release_ids=$(echo "$releases_json" | jq -r --arg pr_num "$PR_NUMBER" '.releases[] | select(.releaseNotes | contains("PR #\($pr_num)")) | .id')

          if [ -z "$release_ids" ]; then
            echo "No releases found for PR #$PR_NUMBER"
          else
            for release_id in $release_ids; do
              echo "Deleting release $release_id linked to PR #$PR_NUMBER"
              firebase appdistribution:releases:delete --app "$FIREBASE_APP_ID" --release-id "$release_id" --token "$FIREBASE_CLI_TOKEN" --yes
            done
          fi
