name: 'Deploy iOS App to TestFlight (Preview)'
description: 'Build and deploy the iOS app to TestFlight Preview using Fastlane'
inputs:
  IOS_MATCH_PASSWORD:
    required: true
    description: 'Match password for signing'
  IOS_MATCH_REPOSITORY_URL:
    required: true
    description: 'Match repository URL for certs'
  IOS_APPLE_ID:
    required: true
    description: 'Apple App ID for app'
  IOS_KEYCHAIN_PASSWORD:
    required: true
    description: 'Keychain password for Fastlane'
  IOS_APP_STORE_CONNECT_API_KEY_ID:
    required: true
    description: 'API Key ID for App Store Connect'
  IOS_APP_STORE_CONNECT_API_KEY_ISSUER_ID:
    required: true
    description: 'Issuer ID for App Store Connect'
  IOS_APP_STORE_CONNECT_API_KEY_B64:
    required: true
    description: 'Base64 encoded API key for App Store Connect'
  IOS_APP_IDENTIFIER:
    required: true
    description: 'Bundle ID for the app'
  IOS_APP_STORE_TEAM_ID:
    required: true
    description: 'App Store Team ID'
  IOS_DEV_EMAIL:
    required: true
    description: 'Developer Apple email'
  IOS_MATCH_DEPLOY_KEY:
    required: true
    description: 'SSH private key for Match repo'
  PR_NUMBER:
    required: false
    description: 'Pull request number for PR-specific builds'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1

    - name: Select Xcode 16.2
      run: |
        sudo xcode-select -s /Applications/Xcode_16.2.app
        export DEVELOPER_DIR="/Applications/Xcode_16.2.app/Contents/Developer"
        xcode-select -p
        xcodebuild -version
      shell: bash

    - name: Install Bundler
      run: gem install bundler
      shell: bash

    - name: Install Ruby dependencies
      working-directory: ios
      run: bundle install
      shell: bash

    - name: Set Node Version
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc

    - name: Install Yarn
      run: npm install -g yarn
      shell: bash

    - name: Install dependencies
      run: yarn install
      shell: bash

    - name: Patch Boost Podspec with Custom Source
      working-directory: node_modules/react-native/third-party-podspecs
      run: |
        awk '
        /spec.source/ {
          print "  spec.source = { :http => '\''https://archives.boost.io/release/1.76.0/source/boost_1_76_0.tar.gz'\'', :sha256 => '\''7bd7ddceec1a1dfdcbdb3e609b60d01739c38390a5f956385a12f3122049f0ca'\'' }";
          skip=1; next
        }
        skip && /\}/ { skip=0; next }
        skip && /:sha256/ { next }
        { print }
        ' boost.podspec > boost.podspec.tmp && mv boost.podspec.tmp boost.podspec
      shell: bash

    - name: Install CocoaPods dependencies
      working-directory: ios
      run: |
        rm -rf Pods
        rm -f Podfile.lock
        bundle exec pod install --repo-update
      shell: bash

    - name: Set up SSH for Match
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ env.IOS_MATCH_DEPLOY_KEY }}

    - name: Add GitHub to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
      shell: bash

    - name: Setup Keychain
      run: |
        security create-keychain -p ${{ env.IOS_KEYCHAIN_PASSWORD }} ios.keychain
        security set-keychain-settings -lut 21600 ios.keychain
        security unlock-keychain -p ${{ env.IOS_KEYCHAIN_PASSWORD }} ios.keychain
        security list-keychains -s ios.keychain
        security default-keychain -d user -s ios.keychain
      shell: bash

    - name: Export Match password
      run: echo "MATCH_PASSWORD=${{ env.IOS_MATCH_PASSWORD }}" >> $GITHUB_ENV
      shell: bash

    - name: Install code signing certificates via Match
      working-directory: ios
      run: bundle exec fastlane ci_signing_setup
      shell: bash

    - name: Clear Derived Data
      run: rm -rf ~/Library/Developer/Xcode/DerivedData
      shell: bash

    - name: Bundle React Native for iOS
      run: |
        ENVFILE=.env.preview NODE_ENV=production npx react-native bundle \
          --entry-file index.js \
          --platform ios \
          --dev false \
          --bundle-output ios/main.jsbundle \
          --assets-dest .
      shell: bash

    - name: iOS PR Deploy to TestFlight
      working-directory: ios
      run: bundle exec fastlane ios pr_deploy
      shell: bash

    - name: Post PR comment with TestFlight link
      if: ${{ env.PR_NUMBER != '' }}
      env:
        GH_TOKEN: ${{ env.GITHUB_TOKEN }}
        PR_NUMBER: ${{ env.PR_NUMBER }}
        BUILD_HASH: ${{ github.sha }}
        IOS_APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ env.IOS_APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        IOS_APPLE_ID: ${{ env.IOS_APPLE_ID }}
      run: |
        brew install gh
        gh auth setup-git
        TESTFLIGHT_LINK="https://appstoreconnect.apple.com/teams/$IOS_APP_STORE_CONNECT_API_KEY_ISSUER_ID/apps/$IOS_APPLE_ID/testflight/ios"
        gh pr comment "$PR_NUMBER" --body "âœ… TestFlight build uploaded for PR #$PR_NUMBER

        - ðŸ”— [View in App Store Connect]($TESTFLIGHT_LINK)
        - ðŸ†” App ID: \`${{ env.IOS_APP_IDENTIFIER }}\`
        - ðŸ§± Build Hash: \`$BUILD_HASH\`

        _This build was deployed by CI using Fastlane._"
      shell: bash
