default_platform(:ios)

platform :ios do
  desc "Fetch certificates for CI"
  lane :ci_signing_setup do
    match(type: "appstore", readonly: true, keychain_name: "ci.keychain", keychain_password: ENV["KEYCHAIN_PASSWORD"])
    match(type: "development", readonly: true, keychain_name: "ci.keychain", keychain_password: ENV["KEYCHAIN_PASSWORD"])
  end

  desc "Build and upload to TestFlight"
  lane :pr_deploy do
    match(type: "appstore", readonly: true, verbose: true, keychain_name: "ci.keychain", keychain_password: ENV["KEYCHAIN_PASSWORD"])

    increment_build_number(
      xcodeproj: "Boilerplate.xcodeproj",
      build_number: Time.now.strftime("%Y%m%d%H%M")
    )

    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_B64'],
      is_key_content_base64: true,
    )

    build_app(
      clean: true,
      scheme: "Boilerplate",
      export_method: "app-store",
      export_options: {
        compileBitcode: false,
        signingStyle: "manual",
        provisioningProfiles: {
        "com.bettrsw.boilerplate" => "match AppStore com.bettrsw.boilerplate"
        }
      },
    )
    
    hermes_binary = "./ios/build/Boilerplate/Build/Products/Release-iphoneos/Boilerplate.app/Frameworks/hermes.framework/hermes"
    if File.exist?(hermes_binary)
      UI.message("🔧 Stripping bitcode from Hermes binary at: #{hermes_binary}")
      sh("xcrun bitcode_strip #{hermes_binary} -r -o #{hermes_binary}")
    else
      UI.important("⚠️ Hermes binary not found at expected path: #{hermes_binary}")
    end
    
    sh <<~BASH
      echo "🔍 Verifying Hermes binary for bitcode..."
      unzip -q "#{lane_context[:IPA_OUTPUT_PATH]}" -d temp_payload
      if xcrun bitcode_strip -r temp_payload/Payload/Boilerplate.app/Frameworks/hermes.framework/hermes -o /dev/null; then
        echo "✅ Hermes binary is clean (no bitcode)."
      else
        echo "❌ Hermes binary still contains bitcode!"
        exit 1
      fi
      rm -rf temp_payload
    BASH



    upload_to_testflight(
      changelog: "PR ##{ENV['PR_NUMBER']} Build - automated upload",
      distribute_external: true,
      skip_waiting_for_build_processing: true,
      username: ENV["FASTLANE_USER"],
      apple_id: ENV["APPLE_ID"],
      app_identifier: "com.bettrsw.boilerplate"
    )
  end
end
