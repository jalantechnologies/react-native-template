name: iOS PR Deploy

on:
  push:
    branches:
      - shivam/feat/ios-production-deploy

jobs:
  build:
    runs-on: macos-14
    timeout-minutes: 30
    env:
      NO_FLIPPER: 1
      IOS_MATCH_PASSWORD: ${{ secrets.IOS_MATCH_PASSWORD }}
      IOS_MATCH_REPOSITORY_URL: ${{ secrets.IOS_MATCH_REPOSITORY_URL }}
      IOS_APPLE_ID: ${{ secrets.IOS_APPLE_ID }}
      IOS_KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
      IOS_APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.IOS_APP_STORE_CONNECT_API_KEY_ID }}
      IOS_APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.IOS_APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
      IOS_APP_STORE_CONNECT_API_KEY_B64: ${{ secrets.IOS_APP_STORE_CONNECT_API_KEY_B64 }}
      IOS_APP_IDENTIFIER: ${{ secrets.IOS_APP_IDENTIFIER }}
      IOS_APP_STORE_TEAM_ID: ${{ secrets.IOS_APP_STORE_TEAM_ID }}
      IOS_DEV_EMAIL: ${{ secrets.IOS_DEV_EMAIL }}
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      - name: Select Xcode 16.0
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Install Bundler
        run: gem install bundler
      
      - name: Install Ruby dependencies
        working-directory: ios
        run: bundle install
      
      - name: Set Node Version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install
      
      # Remove Flipper-related native modules that cause iOS CI build failures
      - name: Remove Flipper dependencies (hard cleanup)
        run: |
          rm -rf node_modules/react-native-flipper ios/Pods/Flipper* || true
          yarn install --check-files || true

      # Patch Boost podspec to use a stable source and checksum to prevent flaky builds
      - name: Patch Boost Podspec with Custom Source
        working-directory: node_modules/react-native/third-party-podspecs
        run: |
          awk '
          /spec.source/ {
          print "  spec.source = { :http => '\''https://archives.boost.io/release/1.76.0/source/boost_1_76_0.tar.gz'\'', :sha256 => '\''7bd7ddceec1a1dfdcbdb3e609b60d01739c38390a5f956385a12f3122049f0ca'\'' }";
          skip=1; next
          }
          skip && /\}/ { skip=0; next }
          skip && /:sha256/ { next }
          { print }
          ' boost.podspec > boost.podspec.tmp && mv boost.podspec.tmp boost.podspec

      - name: Install CocoaPods dependencies
        working-directory: ios
        run: |
          rm -f Podfile.lock
          bundle exec pod install --repo-update

      # Set up SSH key so Match can pull signing identities from private Git repo
      - name: Set up SSH for Match
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.IOS_MATCH_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "GIT_SSH_COMMAND=ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" >> $GITHUB_ENV

      - name: Setup Keychain
        run: |
          security create-keychain -p ${{ secrets.IOS_KEYCHAIN_PASSWORD }} ci.keychain
          security set-keychain-settings -lut 21600 ci.keychain
          security unlock-keychain -p ${{ secrets.IOS_KEYCHAIN_PASSWORD }} ci.keychain
          security default-keychain -d user -s ci.keychain
      
      - name: Export Match password
        run: echo "MATCH_PASSWORD=${{ secrets.IOS_MATCH_PASSWORD }}" >> $GITHUB_ENV

      # Pull certificates and provisioning profiles using Fastlane Match
      - name: Install code signing certificates via Match
        working-directory: ios
        run: |
          echo "üîê Installing certs..."
          bundle exec fastlane ci_signing_setup

      - name: Clear Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Bundle React Native for iOS
        run: |
          echo "Working directory: $(pwd)"
          ls -la ..
          ENVFILE=.env.preview NODE_ENV=production npx react-native bundle \
            --entry-file index.js \
            --platform ios \
            --dev false \
            --bundle-output ios/main.jsbundle \
            --assets-dest . \

      - name: iOS PR Deploy to TestFlight
        working-directory: ios 
        run: |
          bundle exec fastlane ios prod_deploy